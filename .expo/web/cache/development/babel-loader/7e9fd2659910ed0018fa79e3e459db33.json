{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mihailskopenko/Desktop/code/workout-2.0/src/screens/StartScreen/index.js\";\n\nimport React, { useState, useLayoutEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Picker } from \"@react-native-community/picker\";\nimport { observer } from \"mobx-react-lite\";\nimport { useStore } from \"../../components/provider\";\nimport { AntDesign } from '@expo/vector-icons';\nvar StartScreen = observer(function (_ref) {\n  var navigation = _ref.navigation;\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerTitle: \"Выбор упражнений\",\n      headerRight: function headerRight() {\n        return React.createElement(Button, {\n          onPress: function onPress() {\n            return navigation.navigate('StartPage');\n          },\n          title: \"\\u043D\\u0430\\u0447\\u0430\\u0442\\u044C\",\n          color: \"red\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 17\n          }\n        });\n      },\n      headerBackTitle: 'Назад'\n    });\n  }, [navigation]);\n\n  var _useStore = useStore(),\n      workout = _useStore.workout;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  return React.createElement(ScrollView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(Picker, {\n    selectedValue: value,\n    onValueChange: function onValueChange(itemValue, d) {\n      setValue(itemValue);\n      workout.onSelectWorkout(itemValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, React.createElement(AntDesign, {\n    name: \"stepbackward\",\n    size: 24,\n    color: \"black\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }), React.createElement(Picker.Item, {\n    label: 'Выбкрите упражнение',\n    value: '',\n    key: '',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), workout.listWorkout.map(function (item) {\n    return React.createElement(Picker.Item, {\n      label: item,\n      value: item,\n      key: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 53\n      }\n    });\n  })), React.createElement(FlatList, {\n    data: workout.listSelectWorkout,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Text, {\n        key: item.id,\n        onPress: function onPress() {\n          return workout.onRemoveSelectWorkout(item.id);\n        },\n        style: styles.item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 33\n        }\n      }, item.name);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 8\n    }\n  }));\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  item: {\n    padding: 10,\n    fontSize: 18,\n    height: 44\n  },\n  title: {\n    paddingBottom: 100\n  }\n});\nexport default StartScreen;","map":{"version":3,"sources":["/Users/mihailskopenko/Desktop/code/workout-2.0/src/screens/StartScreen/index.js"],"names":["React","useState","useLayoutEffect","Picker","observer","useStore","AntDesign","StartScreen","navigation","setOptions","headerTitle","headerRight","navigate","headerBackTitle","workout","value","setValue","styles","container","itemValue","d","onSelectWorkout","listWorkout","map","item","listSelectWorkout","id","onRemoveSelectWorkout","name","StyleSheet","create","flex","backgroundColor","padding","fontSize","height","title","paddingBottom"],"mappings":"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","sourcesContent":["import React,{useState,useLayoutEffect} from 'react';\nimport { StyleSheet, Text,ScrollView,FlatList,Button} from 'react-native';\nimport {Picker} from \"@react-native-community/picker\";\nimport { observer } from \"mobx-react-lite\"\nimport {useStore} from '../../components/provider'\nimport { AntDesign } from '@expo/vector-icons'; \n\nconst  StartScreen =  observer(({navigation}) => {\n    \n    useLayoutEffect(()=>{\n        navigation.setOptions({\n            headerTitle: \"Выбор упражнений\",\n            headerRight: () => (\n                <Button\n                  onPress={() =>  navigation.navigate('StartPage')}\n                  title=\"начать\"\n                  color=\"red\"\n                />\n              ),\n              headerBackTitle: 'Назад'\n          })\n    },[navigation])\n    const {workout}  = useStore()\n\n    const [value, setValue] = useState('')\n\n\n  return (\n    <ScrollView style={styles.container}>\n        <Picker\n          selectedValue={value} \n          onValueChange={(itemValue,d)=>{\n            setValue(itemValue)\n            workout.onSelectWorkout(itemValue)\n          }}>    \n          <AntDesign name=\"stepbackward\" size={24} color=\"black\" />       \n          <Picker.Item label={'Выбкрите упражнение'} value={''} key={''} />\n         {workout.listWorkout.map((item)=> {return (<Picker.Item label={item} value={item} key={item} />)})}\n       </Picker> \n       <FlatList\n        data={workout.listSelectWorkout}\n        renderItem={({item}) => <Text key={item.id} onPress={()=>workout.onRemoveSelectWorkout(item.id)}  style={styles.item}>{item.name}</Text>}\n        />\n    </ScrollView>\n  );\n})\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n\n  },\n  item: {\n    padding: 10,\n    fontSize: 18,\n    height: 44,\n  },\n  title:{\n    paddingBottom: 100\n  }\n});\n\nexport default   StartScreen"]},"metadata":{},"sourceType":"module"}