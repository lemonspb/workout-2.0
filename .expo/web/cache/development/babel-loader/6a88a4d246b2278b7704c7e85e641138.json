{
  "ast": null,
  "code": "var _this = this,\n    _jsxFileName = \"/Users/mihailskopenko/Desktop/code/workout-2.0/src/components/modal/index.js\";\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { Picker } from \"@react-native-community/picker\";\nimport { observer } from \"mobx-react-lite\";\nvar ModalContainer = observer(function (props) {\n  var _props$selectItem;\n\n  console.log(props, '++');\n  return React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: props.modalVisible,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.modalText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }, props.title), React.createElement(Picker, {\n    selectedValue: (_props$selectItem = props.selectItem) == null ? void 0 : _props$selectItem.limit,\n    onValueChange: function onValueChange(itemValue) {\n      props.onChangeAmount(props.selectItem.id, itemValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }, React.createElement(Picker.Item, {\n    label: 'Выберите кол-во',\n    value: '',\n    key: '',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }\n  }), props.listAmount.map(function (l) {\n    return React.createElement(Picker.Item, {\n      label: \"\" + l,\n      value: l,\n      key: l,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 33\n      }\n    });\n  })), React.createElement(Pressable, {\n    style: [styles.button, styles.buttonClose],\n    onPress: function onPress() {\n      return props.setModalVisible(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }, \"\\u041E\\u041A\")))));\n});\nvar styles = StyleSheet.create({\n  modalView: {\n    margin: 20,\n    marginTop: 300,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: \"#F194FF\"\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\"\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});\nexport default ModalContainer;",
  "map": {
    "version": 3,
    "sources": [
      "/Users/mihailskopenko/Desktop/code/workout-2.0/src/components/modal/index.js"
    ],
    "names": [
      "React",
      "Picker",
      "observer",
      "ModalContainer",
      "props",
      "console",
      "log",
      "modalVisible",
      "styles",
      "centeredView",
      "modalView",
      "modalText",
      "title",
      "selectItem",
      "limit",
      "itemValue",
      "onChangeAmount",
      "id",
      "listAmount",
      "map",
      "l",
      "button",
      "buttonClose",
      "setModalVisible",
      "textStyle",
      "StyleSheet",
      "create",
      "margin",
      "marginTop",
      "backgroundColor",
      "borderRadius",
      "padding",
      "shadowColor",
      "shadowOffset",
      "width",
      "height",
      "shadowOpacity",
      "shadowRadius",
      "elevation",
      "buttonOpen",
      "color",
      "fontWeight",
      "textAlign",
      "marginBottom"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import * as React from 'react';\nimport { StyleSheet, Text, View, Modal, Pressable } from 'react-native';\nimport { Picker } from \"@react-native-community/picker\";\nimport { observer } from \"mobx-react-lite\"\n\nconst ModalContainer = observer((props) => {\n\n    console.log(props, '++')\n\n    return (\n        <Modal\n            animationType=\"slide\"\n            transparent={true}\n            visible={props.modalVisible}\n\n        >\n            <View style={styles.centeredView}>\n                <View style={styles.modalView}>\n                    <Text style={styles.modalText}>{props.title}</Text>\n                    <Picker\n                        selectedValue={props.selectItem?.limit}\n                        onValueChange={(itemValue) => {\n                            props.onChangeAmount(props.selectItem.id, itemValue)\n                        }}\n                    >\n                        <Picker.Item label={'Выберите кол-во'} value={''} key={''} />\n                        {props.listAmount.map((l) => {\n                            return (\n                                <Picker.Item label={`${l}`} value={l} key={l} />\n                            )\n                        })}\n                    </Picker>\n                    <Pressable\n                        style={[styles.button, styles.buttonClose]}\n                        onPress={() => props.setModalVisible(false)}\n                    >\n                        <Text style={styles.textStyle}>ОК</Text>\n                    </Pressable>\n                </View>\n            </View>\n        </Modal>\n    );\n});\n\n\nconst styles = StyleSheet.create({\n    modalView: {\n        margin: 20,\n        marginTop: 300,\n        backgroundColor: \"white\",\n        borderRadius: 20,\n        padding: 35,\n        // alignItems: \"center\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 4,\n        elevation: 5\n    },\n    button: {\n        borderRadius: 20,\n        padding: 10,\n        elevation: 2\n    },\n    buttonOpen: {\n        backgroundColor: \"#F194FF\",\n    },\n    buttonClose: {\n        backgroundColor: \"#2196F3\",\n    },\n    textStyle: {\n        color: \"white\",\n        fontWeight: \"bold\",\n        textAlign: \"center\"\n    },\n    modalText: {\n        marginBottom: 15,\n        textAlign: \"center\"\n    }\n});\n\nexport default ModalContainer;"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
