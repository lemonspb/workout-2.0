{
  "ast": null,
  "code": "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/mihailskopenko/Desktop/code/workout-2.0/App.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Title } from 'react-native-paper';\nimport { Picker } from \"@react-native-community/picker\";\nexport default function App() {\n  var _useState = useState(\"java\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedValue = _useState2[0],\n      setSelectedValue = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      count = _useState4[0],\n      setCount = _useState4[1];\n\n  var onPress = function onPress() {\n    return setCount(function (prevCount) {\n      return prevCount + 1;\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, \"\\u044B\\u0432\\u044B\\u0432\");\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    paddingBottom: 100\n  }\n});",
  "map": {
    "version": 3,
    "sources": ["/Users/mihailskopenko/Desktop/code/workout-2.0/App.js"],
    "names": [
      "React",
      "useState",
      "NavigationContainer",
      "createNativeStackNavigator",
      "Title",
      "Picker",
      "App",
      "selectedValue",
      "setSelectedValue",
      "count",
      "setCount",
      "onPress",
      "prevCount",
      "styles",
      "container",
      "StyleSheet",
      "create",
      "flex",
      "backgroundColor",
      "alignItems",
      "justifyContent",
      "title",
      "paddingBottom"
    ],
    "mappings": ";;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,SAAQC,MAAR,QAAqB,gCAArB;AACA,eAAe,SAASC,GAAT,GAAe;AAC5B,kBAA0CL,QAAQ,CAAC,MAAD,CAAlD;AAAA;AAAA,MAAOM,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,mBAA0BP,QAAQ,CAAC,CAAD,CAAlC;AAAA;AAAA,MAAOQ,KAAP;AAAA,MAAcC,QAAd;;AACA,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,WAAMD,QAAQ,CAAC,UAAAE,SAAS;AAAA,aAAIA,SAAS,GAAG,CAAhB;AAAA,KAAV,CAAd;AAAA,GAAhB;;AACA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF;AAsBD;AAED,IAAMD,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GADoB;AAO/BC,EAAAA,KAAK,EAAC;AACJC,IAAAA,aAAa,EAAE;AADX;AAPyB,CAAlB,CAAf",
    "sourcesContent": [
      "import React,{useState} from 'react';\nimport { StyleSheet, Text, View,TouchableOpacity } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Title } from 'react-native-paper';\nimport {Picker} from \"@react-native-community/picker\"\nexport default function App() {\n  const [selectedValue, setSelectedValue] = useState(\"java\");\n  const [count, setCount] = useState(0);\n  const onPress = () => setCount(prevCount => prevCount + 1);\n  return (\n    <View style={styles.container}>\n      ывыв\n      {/* <View>\n            <Title style={styles.title}>{selectedValue} {count  } </Title>\n            <TouchableOpacity\n        onPress={onPress}\n      >\n        <Text>Увеличить</Text>\n      </TouchableOpacity>\n      </View>\n\n          <Picker\n        selectedValue={selectedValue}\n        style={{ height: 50, width: 150 }}\n        onValueChange={(itemValue, itemIndex) => setSelectedValue(itemValue)}\n      >\n        <Picker.Item label=\"отжимания\" value=\"отжимания\" />\n        <Picker.Item label=\"Подтягивания\" value=\"подтягивания\" />\n      </Picker> */}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title:{\n    paddingBottom: 100\n  }\n});\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
