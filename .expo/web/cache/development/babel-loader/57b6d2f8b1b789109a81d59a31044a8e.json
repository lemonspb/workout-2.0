{
  "ast": null,
  "code": "import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/mihailskopenko/Desktop/code/workout-2.0/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport InitScreen from \"./src/screens/InitScreen\";\nimport StartScreen from \"./src/screens/StartScreen\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { DefaultTheme, Provider as PaperProvider } from 'react-native-paper';\nimport Specifications from \"./src/stores/specifications\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createNativeStackNavigator();\n\nvar theme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n  roundness: 2,\n  colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n    primary: '#3498db',\n    accent: '#f1c40f'\n  })\n});\n\nexport default function App() {\n  var _this = this;\n\n  var a = new Specifications();\n  console.log(a.listheight, '2222');\n  return React.createElement(PaperProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 8\n    }\n  }, React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 8\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: InitScreen,\n    options: {\n      headerTitle: \"Начальная страница\",\n      headerRight: function headerRight() {\n        return React.createElement(Button, {\n          onPress: function onPress() {\n            return alert('This is a button!');\n          },\n          title: \"\\u0414\\u0430\\u043B\\u0435\\u0435\",\n          color: \"red\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 19\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    paddingBottom: 100\n  }\n});",
  "map": {
    "version": 3,
    "sources": ["/Users/mihailskopenko/Desktop/code/workout-2.0/App.js"],
    "names": [
      "React",
      "useState",
      "NavigationContainer",
      "createNativeStackNavigator",
      "InitScreen",
      "StartScreen",
      "createBottomTabNavigator",
      "DefaultTheme",
      "Provider",
      "PaperProvider",
      "Specifications",
      "Tab",
      "Stack",
      "theme",
      "roundness",
      "colors",
      "primary",
      "accent",
      "App",
      "a",
      "console",
      "log",
      "listheight",
      "headerTitle",
      "headerRight",
      "alert",
      "styles",
      "StyleSheet",
      "create",
      "container",
      "flex",
      "backgroundColor",
      "alignItems",
      "justifyContent",
      "title",
      "paddingBottom"
    ],
    "mappings": ";;;;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;;;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,OAAQC,UAAR;AACA,OAAQC,WAAR;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAASC,YAAT,EAAuBC,QAAQ,IAAIC,aAAnC,QAAwD,oBAAxD;AACA,OAAOC,cAAP;AACA,IAAMC,GAAG,GAAGL,wBAAwB,EAApC;AAEA,IAAMM,KAAK,GAAGT,0BAA0B,EAAxC;;AAEA,IAAMU,KAAK,mCACNN,YADM;AAETO,EAAAA,SAAS,EAAE,CAFF;AAGTC,EAAAA,MAAM,kCACDR,YAAY,CAACQ,MADZ;AAEJC,IAAAA,OAAO,EAAE,SAFL;AAGJC,IAAAA,MAAM,EAAE;AAHJ;AAHG,EAAX;;AAUA,eAAe,SAASC,GAAT,GAAgB;AAAA;;AAC7B,MAAMC,CAAC,GAAI,IAAIT,cAAJ,EAAX;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,UAAd,EAAyB,MAAzB;AACA,SACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAET,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEG,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AACM,IAAA,IAAI,EAAC,MADX;AAEK,IAAA,SAAS,EAAET,UAFhB;AAGK,IAAA,OAAO,EAAE;AACPmB,MAAAA,WAAW,EAAE,oBADN;AAEPC,MAAAA,WAAW,EAAE;AAAA,eACX,oBAAC,MAAD;AACE,UAAA,OAAO,EAAE;AAAA,mBAAMC,KAAK,CAAC,mBAAD,CAAX;AAAA,WADX;AAEE,UAAA,KAAK,EAAC,gCAFR;AAGE,UAAA,KAAK,EAAC,KAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADW;AAAA;AAFN,KAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADA,CAFH,CADF;AAyBD;AAED,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GADoB;AAO/BC,EAAAA,KAAK,EAAC;AACJC,IAAAA,aAAa,EAAE;AADX;AAPyB,CAAlB,CAAf",
    "sourcesContent": [
      "import React,{useState} from 'react';\nimport { StyleSheet, Text, View,TouchableOpacity,Button } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport  InitScreen from './src/screens/InitScreen'\nimport  StartScreen from './src/screens/StartScreen'\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { DefaultTheme, Provider as PaperProvider } from 'react-native-paper';\nimport Specifications from './src/stores/specifications'\nconst Tab = createBottomTabNavigator();\n\nconst Stack = createNativeStackNavigator();\n\nconst theme = {\n  ...DefaultTheme,\n  roundness: 2,\n  colors: {\n    ...DefaultTheme.colors,\n    primary: '#3498db',\n    accent: '#f1c40f',\n  },\n};\n\nexport default function App()  {\n  const a =  new Specifications()\n  console.log(a.listheight,'2222')\n  return (\n    <PaperProvider theme={theme}>\n\n       <NavigationContainer>\n       <Stack.Navigator>\n         <Stack.Screen\n               name=\"Home\" \n              component={InitScreen}\n              options={{\n                headerTitle: \"Начальная страница\",\n                headerRight: () => (\n                  <Button\n                    onPress={() => alert('This is a button!')}\n                    title=\"Далее\"\n                    color=\"red\"\n                  />\n                ),\n              }}\n          />\n\n       </Stack.Navigator>\n\n     </NavigationContainer>\n              </PaperProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title:{\n    paddingBottom: 100\n  }\n});\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
