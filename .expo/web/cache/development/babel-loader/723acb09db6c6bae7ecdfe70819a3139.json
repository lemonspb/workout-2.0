{
  "ast": null,
  "code": "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mihailskopenko/Desktop/code/workout-2.0/src/screens/StartScreen/index.js\";\n\nimport React, { useState, useLayoutEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { Picker } from \"@react-native-community/picker\";\nimport { observer } from \"mobx-react-lite\";\nimport { useStore } from \"../../components/provider\";\nimport { List } from 'react-native-paper';\nimport ModalContainer from \"../../components/modal\";\nvar StartScreen = observer(function (_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerTitle: \"Выбор упражнений\",\n      headerRight: function headerRight() {\n        return React.createElement(Button, {\n          onPress: function onPress() {\n            return navigation.navigate('StartPage');\n          },\n          title: \"\\u043D\\u0430\\u0447\\u0430\\u0442\\u044C\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 17\n          }\n        });\n      },\n      headerBackTitle: 'Назад'\n    });\n  }, [navigation]);\n\n  var _useStore = useStore(),\n      workout = _useStore.workout;\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      value = _useState4[0],\n      setValue = _useState4[1];\n\n  var onHandleItemListWorkout = function onHandleItemListWorkout(id) {\n    setModalVisible(true);\n    workout.onSelectWorkout(id);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(ScrollView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, React.createElement(ModalContainer, {\n    seletItem: workout.selectWorkout,\n    modalVisible: modalVisible,\n    setModalVisible: setModalVisible,\n    title: 'Выбор колличества',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), React.createElement(Picker, {\n    selectedValue: value,\n    onValueChange: function onValueChange(itemValue) {\n      setValue(itemValue);\n\n      if (itemValue !== value) {\n        workout.onSelectWorkout(itemValue);\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, React.createElement(Picker.Item, {\n    label: 'Выберите упражнение',\n    value: '',\n    key: '',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }), workout.listWorkout.map(function (item) {\n    return React.createElement(Picker.Item, {\n      label: item,\n      value: item,\n      key: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 62\n      }\n    });\n  })), React.createElement(List.Section, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, React.createElement(List.Subheader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, \"C\\u043F\\u0438\\u0441\\u043E\\u043A \\u0443\\u043F\\u0440\\u0430\\u0436\\u043D\\u0435\\u043D\\u0438\\u0439\"), workout.listSelectWorkout.map(function (item) {\n    return React.createElement(List.Item, {\n      title: item.name,\n      description: \"\\u041A\\u043E\\u043B-\\u0432\\u043E: \" + item.limit,\n      onPress: function onPress() {\n        return onHandleItemListWorkout(item.id);\n      },\n      right: function right() {\n        return React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return workout.onRemoveSelectWorkout(item.id);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }\n        }, React.createElement(List.Icon, {\n          icon: \"delete\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 6\n          }\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 2\n      }\n    });\n  }))));\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  containerItemList: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"row\"\n  },\n  item: {\n    padding: 10,\n    fontSize: 18,\n    height: 44\n  },\n  title: {\n    paddingBottom: 100\n  },\n  modalView: {\n    margin: 20,\n    marginTop: 300,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: \"#F194FF\"\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\"\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});\nexport default StartScreen;",
  "map": {
    "version": 3,
    "sources": [
      "/Users/mihailskopenko/Desktop/code/workout-2.0/src/screens/StartScreen/index.js"
    ],
    "names": [
      "React",
      "useState",
      "useLayoutEffect",
      "Picker",
      "observer",
      "useStore",
      "List",
      "ModalContainer",
      "StartScreen",
      "navigation",
      "modalVisible",
      "setModalVisible",
      "setOptions",
      "headerTitle",
      "headerRight",
      "navigate",
      "headerBackTitle",
      "workout",
      "value",
      "setValue",
      "onHandleItemListWorkout",
      "id",
      "onSelectWorkout",
      "styles",
      "container",
      "selectWorkout",
      "itemValue",
      "listWorkout",
      "map",
      "item",
      "listSelectWorkout",
      "name",
      "limit",
      "onRemoveSelectWorkout",
      "StyleSheet",
      "create",
      "flex",
      "backgroundColor",
      "containerItemList",
      "alignItems",
      "justifyContent",
      "flexDirection",
      "padding",
      "fontSize",
      "height",
      "title",
      "paddingBottom",
      "modalView",
      "margin",
      "marginTop",
      "borderRadius",
      "shadowColor",
      "shadowOffset",
      "width",
      "shadowOpacity",
      "shadowRadius",
      "elevation",
      "button",
      "buttonOpen",
      "buttonClose",
      "textStyle",
      "color",
      "fontWeight",
      "textAlign",
      "modalText",
      "marginBottom"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import React, { useState, useLayoutEffect } from 'react';\nimport { StyleSheet, Text, ScrollView, TouchableOpacity, Button,View,Modal,Pressable } from 'react-native';\nimport { Picker } from \"@react-native-community/picker\";\nimport { observer } from \"mobx-react-lite\"\nimport { useStore } from '../../components/provider'\nimport { List } from 'react-native-paper';\nimport ModalContainer from '../../components/modal'\nconst StartScreen = observer(({ navigation }) => {\n    const [modalVisible, setModalVisible] = useState(false);\n\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            headerTitle: \"Выбор упражнений\",\n            headerRight: () => (\n                <Button\n                    onPress={() => navigation.navigate('StartPage')}\n                    title=\"начать\"\n                \n                />\n            ),\n            headerBackTitle: 'Назад'\n        })\n    }, [navigation])\n    const { workout } = useStore()\n\n    const [value, setValue] = useState('')\n\n\n   const  onHandleItemListWorkout = (id) => {\n        setModalVisible(true)\n        workout.onSelectWorkout(id)\n    }\n\n    return (\n        <>\n        <ScrollView style={styles.container}>\n       \n        <ModalContainer \n        seletItem = {workout.selectWorkout}\n        modalVisible={modalVisible} setModalVisible={setModalVisible} title={'Выбор колличества'}>\n\n        </ModalContainer>\n            <Picker\n                selectedValue={value}\n                onValueChange={(itemValue) => {\n                    setValue(itemValue)\n                    if (itemValue !== value) {\n                        workout.onSelectWorkout(itemValue)\n                    }\n                }}>\n                <Picker.Item label={'Выберите упражнение'} value={''} key={''} />\n                {workout.listWorkout.map((item) => { return (<Picker.Item label={item} value={item} key={item} />) })}\n            </Picker>\n            <List.Section>\n    <List.Subheader>Cписок упражнений</List.Subheader>\n    {workout.listSelectWorkout.map((item)=>\n <List.Item title={item.name} \n description={`Кол-во: ${item.limit}`}\n onPress={() => onHandleItemListWorkout(item.id)}\n right={() => <TouchableOpacity onPress={() => workout.onRemoveSelectWorkout(item.id)} >\n     <List.Icon \n\n    icon=\"delete\"  /></TouchableOpacity>\n\n} />\n    )\n   }\n  </List.Section>\n        </ScrollView>\n        </>\n    );\n})\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n\n    },\n    containerItemList: {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexDirection: \"row\",\n    },\n    item: {\n        padding: 10,\n        fontSize: 18,\n        height: 44,\n    },\n    title: {\n        paddingBottom: 100\n    },\n    modalView: {\n        margin: 20,\n        marginTop: 300,\n        backgroundColor: \"white\",\n        borderRadius: 20,\n        padding: 35,\n        alignItems: \"center\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n          width: 0,\n          height: 2\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 4,\n        elevation: 5\n      },\n      button: {\n        borderRadius: 20,\n        padding: 10,\n        elevation: 2\n      },\n      buttonOpen: {\n        backgroundColor: \"#F194FF\",\n      },\n      buttonClose: {\n        backgroundColor: \"#2196F3\",\n      },\n      textStyle: {\n        color: \"white\",\n        fontWeight: \"bold\",\n        textAlign: \"center\"\n      },\n      modalText: {\n        marginBottom: 15,\n        textAlign: \"center\"\n      }\n});\n\nexport default StartScreen"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
