{
  "ast": null,
  "code": "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mihailskopenko/Desktop/code/workout-2.0/src/screens/StartScreen/index.js\";\n\nimport React, { useState, useLayoutEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Picker } from \"@react-native-community/picker\";\nimport { observer } from \"mobx-react-lite\";\nimport { useStore } from \"../../components/provider\";\nimport { List } from 'react-native-paper';\nimport { Modal } from 'react-native-paper';\nvar StartScreen = observer(function (_ref) {\n  var navigation = _ref.navigation;\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerTitle: \"Выбор упражнений\",\n      headerRight: function headerRight() {\n        return React.createElement(Button, {\n          onPress: function onPress() {\n            return navigation.navigate('StartPage');\n          },\n          title: \"\\u043D\\u0430\\u0447\\u0430\\u0442\\u044C\",\n          color: \"red\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 17\n          }\n        });\n      },\n      headerBackTitle: 'Назад'\n    });\n  }, [navigation]);\n\n  var _useStore = useStore(),\n      workout = _useStore.workout;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var containerStyle = {\n    backgroundColor: 'white',\n    padding: 20\n  };\n  return React.createElement(ScrollView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, React.createElement(Modal, {\n    visible: true,\n    onDismiss: false,\n    contentContainerStyle: containerStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"Example Modal.  Click outside this area to dismiss.\")), React.createElement(Picker, {\n    selectedValue: value,\n    onValueChange: function onValueChange(itemValue) {\n      setValue(itemValue);\n\n      if (itemValue !== value) {\n        workout.onSelectWorkout(itemValue);\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, React.createElement(Picker.Item, {\n    label: 'Выберите упражнение',\n    value: '',\n    key: '',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), workout.listWorkout.map(function (item) {\n    return React.createElement(Picker.Item, {\n      label: item,\n      value: item,\n      key: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 62\n      }\n    });\n  })), React.createElement(List.Section, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, React.createElement(List.Subheader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, \"C\\u043F\\u0438\\u0441\\u043E\\u043A \\u0443\\u043F\\u0440\\u0430\\u0436\\u043D\\u0435\\u043D\\u0438\\u0439\"), workout.listSelectWorkout.map(function (item) {\n    return React.createElement(List.Item, {\n      title: item.name,\n      onPress: function onPress() {\n        return console.log('232');\n      },\n      right: function right() {\n        return React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return workout.onRemoveSelectWorkout(item.id);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }\n        }, React.createElement(List.Icon, {\n          icon: \"delete\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 6\n          }\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 2\n      }\n    });\n  })));\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  containerItemList: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"row\"\n  },\n  item: {\n    padding: 10,\n    fontSize: 18,\n    height: 44\n  },\n  title: {\n    paddingBottom: 100\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: \"#F194FF\"\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\"\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});\nexport default StartScreen;",
  "map": {
    "version": 3,
    "sources": [
      "/Users/mihailskopenko/Desktop/code/workout-2.0/src/screens/StartScreen/index.js"
    ],
    "names": [
      "React",
      "useState",
      "useLayoutEffect",
      "Picker",
      "observer",
      "useStore",
      "List",
      "Modal",
      "StartScreen",
      "navigation",
      "setOptions",
      "headerTitle",
      "headerRight",
      "navigate",
      "headerBackTitle",
      "workout",
      "value",
      "setValue",
      "containerStyle",
      "backgroundColor",
      "padding",
      "styles",
      "container",
      "itemValue",
      "onSelectWorkout",
      "listWorkout",
      "map",
      "item",
      "listSelectWorkout",
      "name",
      "console",
      "log",
      "onRemoveSelectWorkout",
      "id",
      "StyleSheet",
      "create",
      "flex",
      "containerItemList",
      "alignItems",
      "justifyContent",
      "flexDirection",
      "fontSize",
      "height",
      "title",
      "paddingBottom",
      "modalView",
      "margin",
      "borderRadius",
      "shadowColor",
      "shadowOffset",
      "width",
      "shadowOpacity",
      "shadowRadius",
      "elevation",
      "button",
      "buttonOpen",
      "buttonClose",
      "textStyle",
      "color",
      "fontWeight",
      "textAlign",
      "modalText",
      "marginBottom"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import React, { useState, useLayoutEffect } from 'react';\nimport { StyleSheet, Text, ScrollView, TouchableOpacity, Button,View } from 'react-native';\nimport { Picker } from \"@react-native-community/picker\";\nimport { observer } from \"mobx-react-lite\"\nimport { useStore } from '../../components/provider'\nimport { List } from 'react-native-paper';\nimport { Modal } from 'react-native-paper';\n\n\nconst StartScreen = observer(({ navigation }) => {\n\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            headerTitle: \"Выбор упражнений\",\n            headerRight: () => (\n                <Button\n                    onPress={() => navigation.navigate('StartPage')}\n                    title=\"начать\"\n                    color=\"red\"\n                />\n            ),\n            headerBackTitle: 'Назад'\n        })\n    }, [navigation])\n    const { workout } = useStore()\n\n    const [value, setValue] = useState('')\n    const containerStyle = {backgroundColor: 'white', padding: 20};\n\n    return (\n        <ScrollView style={styles.container}>\n          <Modal visible={true} onDismiss={false} contentContainerStyle={containerStyle}>\n          <Text>Example Modal.  Click outside this area to dismiss.</Text>\n        </Modal>\n            <Picker\n                selectedValue={value}\n                onValueChange={(itemValue) => {\n                    setValue(itemValue)\n                    if (itemValue !== value) {\n                        workout.onSelectWorkout(itemValue)\n                    }\n                }}>\n                <Picker.Item label={'Выберите упражнение'} value={''} key={''} />\n                {workout.listWorkout.map((item) => { return (<Picker.Item label={item} value={item} key={item} />) })}\n            </Picker>\n            <List.Section>\n    <List.Subheader>Cписок упражнений</List.Subheader>\n    {workout.listSelectWorkout.map((item)=>\n <List.Item title={item.name} \n onPress={() => console.log('232')}\n right={() => <TouchableOpacity onPress={() => workout.onRemoveSelectWorkout(item.id)} >\n     <List.Icon \n\n    icon=\"delete\"  /></TouchableOpacity>\n\n} />\n    )\n   }\n  </List.Section>\n            {/* <FlatList\n                data={workout.listSelectWorkout}\n                renderItem={({ item }) =>\n                    <View style={styles.containerItemList}>\n                        <Text key={item.id} style={styles.item}>{item.name}</Text>\n                        <AntDesign onPress={() => workout.onRemoveSelectWorkout(item.id)} name=\"delete\" size={24} color=\"black\" />\n                    </View>\n                }\n            /> */}\n        </ScrollView>\n    );\n})\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n\n    },\n    containerItemList: {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexDirection: \"row\",\n    },\n    item: {\n        padding: 10,\n        fontSize: 18,\n        height: 44,\n    },\n    title: {\n        paddingBottom: 100\n    },\n    modalView: {\n        margin: 20,\n        backgroundColor: \"white\",\n        borderRadius: 20,\n        padding: 35,\n        alignItems: \"center\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n          width: 0,\n          height: 2\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 4,\n        elevation: 5\n      },\n      button: {\n        borderRadius: 20,\n        padding: 10,\n        elevation: 2\n      },\n      buttonOpen: {\n        backgroundColor: \"#F194FF\",\n      },\n      buttonClose: {\n        backgroundColor: \"#2196F3\",\n      },\n      textStyle: {\n        color: \"white\",\n        fontWeight: \"bold\",\n        textAlign: \"center\"\n      },\n      modalText: {\n        marginBottom: 15,\n        textAlign: \"center\"\n      }\n});\n\nexport default StartScreen"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
