{
  "ast": null,
  "code": "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mihailskopenko/Desktop/code/workout-2.0/src/screens/InitScreen/index.js\";\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { TextInput } from 'react-native-paper';\nimport { Picker } from \"@react-native-community/picker\";\nimport Specifications from \"../../stores/specifications\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { observer } from \"mobx-react-lite\";\nvar a = new Specifications();\nvar InitInfoScreen = observer(function (_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      text = _React$useState2[0],\n      setText = _React$useState2[1];\n\n  console.log(a, '_+_+_+_');\n\n  var _useState = useState(new Date(1598051730000)),\n      _useState2 = _slicedToArray(_useState, 2),\n      date = _useState2[0],\n      setDate = _useState2[1];\n\n  var _useState3 = useState('date'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      mode = _useState4[0],\n      setMode = _useState4[1];\n\n  return React.createElement(ScrollView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    label: \"\\u0418\\u043C\\u044F\",\n    value: text,\n    onChangeText: function onChangeText(text) {\n      return setText(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }), React.createElement(DateTimePicker, {\n    testID: \"dateTimePicker\",\n    value: date,\n    mode: mode,\n    is24Hour: true,\n    display: \"default\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 6\n    }\n  }), React.createElement(Picker, {\n    selectedValue: a.formSpecification.height,\n    onValueChange: function onValueChange(itemValue) {\n      a.handleChange('height', itemValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0420\\u043E\\u0441\\u0442\",\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), a.listHeight.map(function (b) {\n    return React.createElement(Picker.Item, {\n      label: b + \" \\u0441\\u043C\",\n      value: b,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    });\n  })), React.createElement(Picker, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 8\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0432\\u0435\\u0441\",\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 8\n    }\n  }), a.listWeight.map(function (w) {\n    return React.createElement(Picker.Item, {\n      label: w + \" \\u043A\\u0433\",\n      value: w,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 34\n      }\n    });\n  })));\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  },\n  title: {\n    paddingBottom: 100\n  }\n});\nexport default InitInfoScreen;",
  "map": {
    "version": 3,
    "sources": [
      "/Users/mihailskopenko/Desktop/code/workout-2.0/src/screens/InitScreen/index.js"
    ],
    "names": [
      "React",
      "useState",
      "TextInput",
      "Picker",
      "Specifications",
      "DateTimePicker",
      "observer",
      "a",
      "InitInfoScreen",
      "navigation",
      "text",
      "setText",
      "console",
      "log",
      "Date",
      "date",
      "setDate",
      "mode",
      "setMode",
      "styles",
      "container",
      "formSpecification",
      "height",
      "itemValue",
      "handleChange",
      "listHeight",
      "map",
      "b",
      "listWeight",
      "w",
      "StyleSheet",
      "create",
      "flex",
      "backgroundColor",
      "input",
      "margin",
      "borderWidth",
      "padding",
      "title",
      "paddingBottom"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import React,{useState} from 'react';\nimport { StyleSheet, Text,ScrollView} from 'react-native';\nimport { TextInput } from 'react-native-paper';\nimport {Picker} from \"@react-native-community/picker\";\nimport Specifications from '../../stores/specifications'\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { observer } from \"mobx-react-lite\"\n\nconst a =  new Specifications()\n\n const InitInfoScreen = observer(({ navigation }) => {\n  const [text, setText] = React.useState('');\n\n\n  console.log(a,'_+_+_+_')\n  const [date, setDate] = useState(new Date(1598051730000));\n  const [mode, setMode] = useState('date');\n  return (\n    <ScrollView style={styles.container}>\n    <TextInput\n      label=\"Имя\"\n      value={text}\n      onChangeText={text => setText(text)}\n    />\n     <DateTimePicker\n          testID=\"dateTimePicker\"\n          value={date}\n          mode={mode}\n          is24Hour={true}\n          display=\"default\"\n  \n        />\n      <Picker \n      selectedValue={a.formSpecification.height}\n      onValueChange={(itemValue)=>{\n        a.handleChange('height',itemValue)\n      }}>\n      <Picker.Item label=\"Выберите Рост\" value=\"\" />\n          {a.listHeight.map((b)=>{\n          return (\n            <Picker.Item label={`${b} см`} value={b} />\n          )\n        })}\n       </Picker>\n       <Picker>\n       <Picker.Item label=\"Выберите вес\" value=\"\" />\n          {a.listWeight.map((w)=><Picker.Item label={`${w} кг`} value={w} />)}\n       </Picker>\n    </ScrollView>\n    \n  );\n})\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n   \n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n  },\n  title:{\n    paddingBottom: 100\n  }\n});\n\nexport default InitInfoScreen"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
