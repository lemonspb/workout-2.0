{
  "ast": null,
  "code": "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/mihailskopenko/Desktop/code/workout-2.0/App.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Title } from 'react-native-paper';\nimport { Picker } from \"@react-native-community/picker\";\nexport default function App() {\n  var _useState = useState(\"java\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedValue = _useState2[0],\n      setSelectedValue = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      count = _useState4[0],\n      setCount = _useState4[1];\n\n  var onPress = function onPress() {\n    return setCount(function (prevCount) {\n      return prevCount + 1;\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, React.createElement(Title, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, selectedValue, \" \", count, \" \"), React.createElement(TouchableOpacity, {\n    onPress: onPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, \"\\u0423\\u0432\\u0435\\u043B\\u0438\\u0447\\u0438\\u0442\\u044C\"))), React.createElement(Picker, {\n    selectedValue: selectedValue,\n    style: {\n      height: 50,\n      width: 150\n    },\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return setSelectedValue(itemValue);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"\\u043E\\u0442\\u0436\\u0438\\u043C\\u0430\\u043D\\u0438\\u044F\",\n    value: \"\\u043E\\u0442\\u0436\\u0438\\u043C\\u0430\\u043D\\u0438\\u044F\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"\\u041F\\u043E\\u0434\\u0442\\u044F\\u0433\\u0438\\u0432\\u0430\\u043D\\u0438\\u044F\",\n    value: \"\\u043F\\u043E\\u0434\\u0442\\u044F\\u0433\\u0438\\u0432\\u0430\\u043D\\u0438\\u044F\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    paddingBottom: 100\n  }\n});",
  "map": {
    "version": 3,
    "sources": ["/Users/mihailskopenko/Desktop/code/workout-2.0/App.js"],
    "names": [
      "React",
      "useState",
      "Title",
      "Picker",
      "App",
      "selectedValue",
      "setSelectedValue",
      "count",
      "setCount",
      "onPress",
      "prevCount",
      "styles",
      "container",
      "title",
      "height",
      "width",
      "itemValue",
      "itemIndex",
      "StyleSheet",
      "create",
      "flex",
      "backgroundColor",
      "alignItems",
      "justifyContent",
      "paddingBottom"
    ],
    "mappings": ";;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;;;;AAEA,SAASC,KAAT,QAAsB,oBAAtB;AACA,SAAQC,MAAR,QAAqB,gCAArB;AACA,eAAe,SAASC,GAAT,GAAe;AAC5B,kBAA0CH,QAAQ,CAAC,MAAD,CAAlD;AAAA;AAAA,MAAOI,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,mBAA0BL,QAAQ,CAAC,CAAD,CAAlC;AAAA;AAAA,MAAOM,KAAP;AAAA,MAAcC,QAAd;;AACA,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,WAAMD,QAAQ,CAAC,UAAAE,SAAS;AAAA,aAAIA,SAAS,GAAG,CAAhB;AAAA,KAAV,CAAd;AAAA,GAAhB;;AACA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAED,MAAM,CAACE,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BR,aAA7B,OAA6CE,KAA7C,MADN,EAEM,oBAAC,gBAAD;AACJ,IAAA,OAAO,EAAEE,OADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGJ,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DAHI,CAFN,CADF,EAUM,oBAAC,MAAD;AACF,IAAA,aAAa,EAAEJ,aADb;AAEF,IAAA,KAAK,EAAE;AAAES,MAAAA,MAAM,EAAE,EAAV;AAAcC,MAAAA,KAAK,EAAE;AAArB,KAFL;AAGF,IAAA,aAAa,EAAE,uBAACC,SAAD,EAAYC,SAAZ;AAAA,aAA0BX,gBAAgB,CAACU,SAAD,CAA1C;AAAA,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKF,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,wDAAnB;AAA+B,IAAA,KAAK,EAAC,wDAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALE,EAMF,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,0EAAnB;AAAkC,IAAA,KAAK,EAAC,0EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANE,CAVN,CADF;AAqBD;AAED,IAAML,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GADoB;AAO/BV,EAAAA,KAAK,EAAC;AACJW,IAAAA,aAAa,EAAE;AADX;AAPyB,CAAlB,CAAf",
    "sourcesContent": [
      "import React,{useState} from 'react';\nimport { StyleSheet, Text, View,TouchableOpacity } from 'react-native';\nimport { Title } from 'react-native-paper';\nimport {Picker} from \"@react-native-community/picker\"\nexport default function App() {\n  const [selectedValue, setSelectedValue] = useState(\"java\");\n  const [count, setCount] = useState(0);\n  const onPress = () => setCount(prevCount => prevCount + 1);\n  return (\n    <View style={styles.container}>\n      <View>\n            <Title style={styles.title}>{selectedValue} {count} </Title>\n            <TouchableOpacity\n        onPress={onPress}\n      >\n        <Text>Увеличить</Text>\n      </TouchableOpacity>\n      </View>\n\n          <Picker\n        selectedValue={selectedValue}\n        style={{ height: 50, width: 150 }}\n        onValueChange={(itemValue, itemIndex) => setSelectedValue(itemValue)}\n      >\n        <Picker.Item label=\"отжимания\" value=\"отжимания\" />\n        <Picker.Item label=\"Подтягивания\" value=\"подтягивания\" />\n      </Picker>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title:{\n    paddingBottom: 100\n  }\n});\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
