{
  "ast": null,
  "code": "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mihailskopenko/Desktop/code/workout-2.0/src/components/modal/index.js\";\n\nimport * as React from 'react';\nimport { Modal, Portal, Text, Button, Provider } from 'react-native-paper';\n\nvar ModalContainer = function ModalContainer(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      modalVisible = _React$useState2[0],\n      setModalVisible = _React$useState2[1];\n\n  return React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: function onRequestClose() {\n      Alert.alert(\"Modal has been closed.\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.modalText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, props.title), props.children, React.createElement(Pressable, {\n    style: [styles.button, styles.buttonClose],\n    onPress: function onPress() {\n      return setModalVisible(!modalVisible);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, \"Hide Modal\")))));\n};\n\nexport default ModalContainer;",
  "map": {
    "version": 3,
    "sources": [
      "/Users/mihailskopenko/Desktop/code/workout-2.0/src/components/modal/index.js"
    ],
    "names": [
      "React",
      "Modal",
      "Portal",
      "Text",
      "Button",
      "Provider",
      "ModalContainer",
      "props",
      "useState",
      "modalVisible",
      "setModalVisible",
      "Alert",
      "alert",
      "styles",
      "centeredView",
      "modalView",
      "modalText",
      "title",
      "children",
      "button",
      "buttonClose",
      "textStyle"
    ],
    "mappings": ";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,EAA8BC,MAA9B,EAAsCC,QAAtC,QAAsD,oBAAtD;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAChC,wBAAwCP,KAAK,CAACQ,QAAN,CAAe,KAAf,CAAxC;AAAA;AAAA,MAAOC,YAAP;AAAA,MAAqBC,eAArB;;AAGA,SACE,oBAAC,KAAD;AACA,IAAA,aAAa,EAAC,OADd;AAEA,IAAA,WAAW,EAAE,IAFb;AAGA,IAAA,OAAO,EAAED,YAHT;AAIA,IAAA,cAAc,EAAE,0BAAM;AACpBE,MAAAA,KAAK,CAACC,KAAN,CAAY,wBAAZ;AAED,KAPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACF,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCT,KAAK,CAACU,KAAtC,CADF,EAEGV,KAAK,CAACW,QAFT,EAGE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAE,CAACL,MAAM,CAACM,MAAR,EAAgBN,MAAM,CAACO,WAAvB,CADT;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMV,eAAe,CAAC,CAACD,YAAF,CAArB;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACQ,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,CAHF,CADE,CATJ,CADF;AAyBD,CA7BD;;AA+BA,eAAef,cAAf",
    "sourcesContent": [
      "import * as React from 'react';\nimport { Modal, Portal, Text, Button, Provider } from 'react-native-paper';\n\nconst ModalContainer = (props) => {\n  const [modalVisible, setModalVisible] = React.useState(false);\n\n\n  return (\n    <Modal\n    animationType=\"slide\"\n    transparent={true}\n    visible={modalVisible}\n    onRequestClose={() => {\n      Alert.alert(\"Modal has been closed.\");\n  \n    }}\n  >\n        <View style={styles.centeredView}>\n      <View style={styles.modalView}>\n        <Text style={styles.modalText}>{props.title}</Text>\n        {props.children}      \n        <Pressable\n          style={[styles.button, styles.buttonClose]}\n          onPress={() => setModalVisible(!modalVisible)}\n        >\n          <Text style={styles.textStyle}>Hide Modal</Text>\n\n        </Pressable>\n      </View>\n    </View>\n  </Modal>\n  );\n};\n\nexport default ModalContainer;"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
