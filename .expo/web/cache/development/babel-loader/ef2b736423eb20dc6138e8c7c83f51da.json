{
  "ast": null,
  "code": "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mihailskopenko/Desktop/code/workout-2.0/src/components/modal/index.js\";\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { Picker } from \"@react-native-community/picker\";\n\nvar ModalContainer = function ModalContainer(props) {\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      modalVisible = _React$useState2[0],\n      setModalVisible = _React$useState2[1];\n\n  return React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.modalText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, props.title), React.createElement(Picker, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, React.createElement(Picker.Item, {\n    label: 'Выберите упражнение',\n    value: 'dddd',\n    key: '23213',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: 'Выберите упражнение',\n    value: 'dddd',\n    key: '23213',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  })), React.createElement(Pressable, {\n    style: [styles.button, styles.buttonClose],\n    onPress: function onPress() {\n      return setModalVisible(!modalVisible);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, \"\\u041E\\u041A\")))));\n};\n\nvar styles = StyleSheet.create({\n  modalView: {\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: \"#F194FF\"\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\"\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});\nexport default ModalContainer;",
  "map": {
    "version": 3,
    "sources": [
      "/Users/mihailskopenko/Desktop/code/workout-2.0/src/components/modal/index.js"
    ],
    "names": [
      "React",
      "Picker",
      "ModalContainer",
      "props",
      "useState",
      "modalVisible",
      "setModalVisible",
      "styles",
      "centeredView",
      "modalView",
      "modalText",
      "title",
      "button",
      "buttonClose",
      "textStyle",
      "StyleSheet",
      "create",
      "backgroundColor",
      "borderRadius",
      "shadowColor",
      "shadowOffset",
      "width",
      "height",
      "shadowOpacity",
      "shadowRadius",
      "elevation",
      "padding",
      "buttonOpen",
      "color",
      "fontWeight",
      "textAlign",
      "marginBottom"
    ],
    "mappings": ";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;;;;;AAEA,SAASC,MAAT,QAAuB,gCAAvB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAChC,wBAAwCH,KAAK,CAACI,QAAN,CAAe,IAAf,CAAxC;AAAA;AAAA,MAAOC,YAAP;AAAA,MAAqBC,eAArB;;AAGA,SACE,oBAAC,KAAD;AACA,IAAA,aAAa,EAAC,OADd;AAEA,IAAA,WAAW,EAAE,IAFb;AAGA,IAAA,OAAO,EAAED,YAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACF,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCP,KAAK,CAACQ,KAAtC,CADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAE,qBAApB;AAA2C,IAAA,KAAK,EAAE,MAAlD;AAA0D,IAAA,GAAG,EAAE,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR,EAEQ,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAE,qBAApB;AAA2C,IAAA,KAAK,EAAE,MAAlD;AAA0D,IAAA,GAAG,EAAE,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR,CAFF,EAOE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAE,CAACJ,MAAM,CAACK,MAAR,EAAgBL,MAAM,CAACM,WAAvB,CADT;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMP,eAAe,CAAC,CAACD,YAAF,CAArB;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACO,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,CAPF,CADE,CALJ,CADF;AAwBD,CA5BD;;AA+BA,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC7BP,EAAAA,SAAS,EAAE;AAGPQ,IAAAA,eAAe,EAAE,OAHV;AAIPC,IAAAA,YAAY,EAAE,EAJP;AAOPC,IAAAA,WAAW,EAAE,MAPN;AAQPC,IAAAA,YAAY,EAAE;AACZC,MAAAA,KAAK,EAAE,CADK;AAEZC,MAAAA,MAAM,EAAE;AAFI,KARP;AAYPC,IAAAA,aAAa,EAAE,IAZR;AAaPC,IAAAA,YAAY,EAAE,CAbP;AAcPC,IAAAA,SAAS,EAAE;AAdJ,GADkB;AAiB3Bb,EAAAA,MAAM,EAAE;AACNM,IAAAA,YAAY,EAAE,EADR;AAENQ,IAAAA,OAAO,EAAE,EAFH;AAGND,IAAAA,SAAS,EAAE;AAHL,GAjBmB;AAsB3BE,EAAAA,UAAU,EAAE;AACVV,IAAAA,eAAe,EAAE;AADP,GAtBe;AAyB3BJ,EAAAA,WAAW,EAAE;AACXI,IAAAA,eAAe,EAAE;AADN,GAzBc;AA4B3BH,EAAAA,SAAS,EAAE;AACTc,IAAAA,KAAK,EAAE,OADE;AAETC,IAAAA,UAAU,EAAE,MAFH;AAGTC,IAAAA,SAAS,EAAE;AAHF,GA5BgB;AAiC3BpB,EAAAA,SAAS,EAAE;AACTqB,IAAAA,YAAY,EAAE,EADL;AAETD,IAAAA,SAAS,EAAE;AAFF;AAjCgB,CAAlB,CAAf;AAuCA,eAAe5B,cAAf",
    "sourcesContent": [
      "import * as React from 'react';\nimport { StyleSheet, Text, ScrollView, TouchableOpacity, Button,View,Modal,Pressable } from 'react-native';\nimport { Picker } from \"@react-native-community/picker\";\n\nconst ModalContainer = (props) => {\n  const [modalVisible, setModalVisible] = React.useState(true);\n\n\n  return (\n    <Modal\n    animationType=\"slide\"\n    transparent={true}\n    visible={modalVisible}\n  >\n        <View style={styles.centeredView}>\n      <View style={styles.modalView}>\n        <Text style={styles.modalText}>{props.title}</Text>\n        <Picker>\n                <Picker.Item label={'Выберите упражнение'} value={'dddd'} key={'23213'} />\n                <Picker.Item label={'Выберите упражнение'} value={'dddd'} key={'23213'} />\n\n            </Picker>\n        <Pressable\n          style={[styles.button, styles.buttonClose]}\n          onPress={() => setModalVisible(!modalVisible)}\n        >\n          <Text style={styles.textStyle}>ОК</Text>\n        </Pressable>\n      </View>\n    </View>\n  </Modal>\n  );\n};\n\n\nconst styles = StyleSheet.create({\n    modalView: {\n        // margin: 20,\n        // marginTop: 300,\n        backgroundColor: \"white\",\n        borderRadius: 20,\n        // padding: 35,\n        // alignItems: \"center\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n          width: 0,\n          height: 2\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 4,\n        elevation: 5\n      },\n      button: {\n        borderRadius: 20,\n        padding: 10,\n        elevation: 2\n      },\n      buttonOpen: {\n        backgroundColor: \"#F194FF\",\n      },\n      buttonClose: {\n        backgroundColor: \"#2196F3\",\n      },\n      textStyle: {\n        color: \"white\",\n        fontWeight: \"bold\",\n        textAlign: \"center\"\n      },\n      modalText: {\n        marginBottom: 15,\n        textAlign: \"center\"\n      }\n});\n\nexport default ModalContainer;"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
