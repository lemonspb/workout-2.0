{
  "ast": null,
  "code": "import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mihailskopenko/Desktop/code/workout-2.0/src/screens/InitScreen/index.js\";\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { TextInput } from 'react-native-paper';\nimport { Picker } from \"@react-native-community/picker\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { observer } from \"mobx-react-lite\";\nimport { useStore } from \"../../components/provider\";\nvar InitInfoScreen = observer(function (_ref) {\n  var navigation = _ref.navigation;\n  navigation.setOptions({\n    headerTitle: \"Ваши характиристики\",\n    headerRight: function headerRight() {\n      return React.createElement(Button, {\n        onPress: function onPress() {\n          return navigation.navigate('StartPage');\n        },\n        title: \"\\u0414\\u0430\\u043B\\u0435\\u0435\",\n        color: \"red\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 7\n        }\n      });\n    }\n  });\n\n  var _useStore = useStore(),\n      specifications = _useStore.specifications;\n\n  var _useState = useState(new Date(1598051730000)),\n      _useState2 = _slicedToArray(_useState, 2),\n      date = _useState2[0],\n      setDate = _useState2[1];\n\n  var _useState3 = useState('default'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      mode = _useState4[0],\n      setMode = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      value = _useState6[0],\n      setValue = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      listValue = _useState8[0],\n      setListValue = _useState8[1];\n\n  var ar = [\"отжимания\", \"подтягивания\"];\n  return React.createElement(ScrollView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    label: \"\\u0418\\u043C\\u044F\",\n    value: specifications.formSpecification.name,\n    onChangeText: function onChangeText(text) {\n      return specifications.handleChange('name', text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }), React.createElement(DateTimePicker, {\n    testID: \"dateTimePicker\",\n    value: date,\n    mode: mode,\n    locale: \"ru-RU\",\n    is24Hour: true,\n    display: \"spinner\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 6\n    }\n  }), React.createElement(Picker, {\n    selectedValue: value,\n    onValueChange: function onValueChange(itemValue) {\n      console.log(itemValue);\n      setValue(itemValue);\n      setListValue.apply(void 0, _toConsumableArray(listValue).concat([itemValue]));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 24\n    }\n  }, ar.map(function (tr) {\n    return React.createElement(Picker.Item, {\n      label: tr,\n      value: tr,\n      key: tr,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 34\n      }\n    });\n  })), React.createElement(Picker, {\n    selectedValue: specifications.formSpecification.height,\n    onValueChange: function onValueChange(itemValue) {\n      specifications.handleChange('height', itemValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0420\\u043E\\u0441\\u0442\",\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), specifications.listHeight.map(function (h) {\n    return React.createElement(Picker.Item, {\n      label: h + \" \\u0441\\u043C\",\n      value: h,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    });\n  })), React.createElement(Picker, {\n    selectedValue: specifications.formSpecification.weight,\n    onValueChange: function onValueChange(itemValue) {\n      specifications.handleChange('weight', itemValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 8\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0432\\u0435\\u0441\",\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 8\n    }\n  }), specifications.listWeight.map(function (w) {\n    return React.createElement(Picker.Item, {\n      label: w + \" \\u043A\\u0433\",\n      value: w,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 47\n      }\n    });\n  })));\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  },\n  title: {\n    paddingBottom: 100\n  }\n});\nexport default InitInfoScreen;",
  "map": {
    "version": 3,
    "sources": [
      "/Users/mihailskopenko/Desktop/code/workout-2.0/src/screens/InitScreen/index.js"
    ],
    "names": [
      "React",
      "useState",
      "TextInput",
      "Picker",
      "DateTimePicker",
      "observer",
      "useStore",
      "InitInfoScreen",
      "navigation",
      "setOptions",
      "headerTitle",
      "headerRight",
      "navigate",
      "specifications",
      "Date",
      "date",
      "setDate",
      "mode",
      "setMode",
      "value",
      "setValue",
      "listValue",
      "setListValue",
      "ar",
      "styles",
      "container",
      "formSpecification",
      "name",
      "text",
      "handleChange",
      "itemValue",
      "console",
      "log",
      "map",
      "tr",
      "height",
      "listHeight",
      "h",
      "weight",
      "listWeight",
      "w",
      "StyleSheet",
      "create",
      "flex",
      "backgroundColor",
      "input",
      "margin",
      "borderWidth",
      "padding",
      "title",
      "paddingBottom"
    ],
    "mappings": ";;;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;;;AAEA,SAASC,SAAT,QAA0B,oBAA1B;AACE,SAAQC,MAAR,QAAqB,gCAArB;AACF,OAAOC,cAAP,MAA2B,wCAA3B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAAQC,QAAR;AAGC,IAAMC,cAAc,GAAGF,QAAQ,CAAC,gBAAoB;AAAA,MAAjBG,UAAiB,QAAjBA,UAAiB;AACnDA,EAAAA,UAAU,CAACC,UAAX,CAAsB;AACpBC,IAAAA,WAAW,EAAE,qBADO;AAEpBC,IAAAA,WAAW,EAAE;AAAA,aACX,oBAAC,MAAD;AACE,QAAA,OAAO,EAAE;AAAA,iBAAOH,UAAU,CAACI,QAAX,CAAoB,WAApB,CAAP;AAAA,SADX;AAEE,QAAA,KAAK,EAAC,gCAFR;AAGE,QAAA,KAAK,EAAC,KAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADW;AAAA;AAFO,GAAtB;;AAUA,kBAA0BN,QAAQ,EAAlC;AAAA,MAAOO,cAAP,aAAOA,cAAP;;AACA,kBAAwBZ,QAAQ,CAAC,IAAIa,IAAJ,CAAS,aAAT,CAAD,CAAhC;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAwBf,QAAQ,CAAC,SAAD,CAAhC;AAAA;AAAA,MAAOgB,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAA0BjB,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOkB,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAiCnB,QAAQ,CAAC,EAAD,CAAzC;AAAA;AAAA,MAAOoB,SAAP;AAAA,MAAiBC,YAAjB;;AACA,MAAMC,EAAE,GAAG,CAAC,WAAD,EAAc,cAAd,CAAX;AACA,SACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEC,MAAM,CAACC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,oBADR;AAEE,IAAA,KAAK,EAAEZ,cAAc,CAACa,iBAAf,CAAiCC,IAF1C;AAGE,IAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,aAAKf,cAAc,CAACgB,YAAf,CAA4B,MAA5B,EAAmCD,IAAnC,CAAL;AAAA,KAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAMC,oBAAC,cAAD;AACK,IAAA,MAAM,EAAC,gBADZ;AAEK,IAAA,KAAK,EAAEb,IAFZ;AAGK,IAAA,IAAI,EAAEE,IAHX;AAIK,IAAA,MAAM,EAAC,OAJZ;AAKK,IAAA,QAAQ,EAAE,IALf;AAMK,IAAA,OAAO,EAAC,SANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAND,EAemB,oBAAC,MAAD;AACb,IAAA,aAAa,EAAEE,KADF;AAEb,IAAA,aAAa,EAAE,uBAACW,SAAD,EAAa;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACFV,MAAAA,QAAQ,CAACU,SAAD,CAAR;AACAR,MAAAA,YAAY,MAAZ,4BAAgBD,SAAhB,UAA0BS,SAA1B;AACD,KANY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAObP,EAAE,CAACU,GAAH,CAAO,UAACC,EAAD,EAAO;AAAC,WAAQ,oBAAC,MAAD,CAAQ,IAAR;AAAa,MAAA,KAAK,EAAEA,EAApB;AAAwB,MAAA,KAAK,EAAEA,EAA/B;AAAmC,MAAA,GAAG,EAAEA,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AAAwD,GAAvE,CAPa,CAfnB,EAwBE,oBAAC,MAAD;AACA,IAAA,aAAa,EAAErB,cAAc,CAACa,iBAAf,CAAiCS,MADhD;AAEA,IAAA,aAAa,EAAE,uBAACL,SAAD,EAAa;AAC1BjB,MAAAA,cAAc,CAACgB,YAAf,CAA4B,QAA5B,EAAqCC,SAArC;AACD,KAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKA,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,2EAAnB;AAAmC,IAAA,KAAK,EAAC,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALA,EAMKjB,cAAc,CAACuB,UAAf,CAA0BH,GAA1B,CAA8B,UAACI,CAAD,EAAK;AACpC,WACE,oBAAC,MAAD,CAAQ,IAAR;AAAa,MAAA,KAAK,EAAKA,CAAL,kBAAlB;AAA+B,MAAA,KAAK,EAAEA,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GAJE,CANL,CAxBF,EAoCG,oBAAC,MAAD;AACG,IAAA,aAAa,EAAExB,cAAc,CAACa,iBAAf,CAAiCY,MADnD;AAEK,IAAA,aAAa,EAAE,uBAACR,SAAD,EAAa;AAC1BjB,MAAAA,cAAc,CAACgB,YAAf,CAA4B,QAA5B,EAAqCC,SAArC;AACD,KAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMA,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,qEAAnB;AAAkC,IAAA,KAAK,EAAC,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANA,EAOIjB,cAAc,CAAC0B,UAAf,CAA0BN,GAA1B,CAA8B,UAACO,CAAD;AAAA,WAAK,oBAAC,MAAD,CAAQ,IAAR;AAAa,MAAA,KAAK,EAAKA,CAAL,kBAAlB;AAA+B,MAAA,KAAK,EAAEA,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL;AAAA,GAA9B,CAPJ,CApCH,CADF;AAiDD,CAlE+B,CAA/B;AAoED,IAAMhB,MAAM,GAAGiB,UAAU,CAACC,MAAX,CAAkB;AAC/BjB,EAAAA,SAAS,EAAE;AACTkB,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE;AAFR,GADoB;AAM/BC,EAAAA,KAAK,EAAE;AACLV,IAAAA,MAAM,EAAE,EADH;AAELW,IAAAA,MAAM,EAAE,EAFH;AAGLC,IAAAA,WAAW,EAAE,CAHR;AAILC,IAAAA,OAAO,EAAE;AAJJ,GANwB;AAY/BC,EAAAA,KAAK,EAAC;AACJC,IAAAA,aAAa,EAAE;AADX;AAZyB,CAAlB,CAAf;AAiBA,eAAe3C,cAAf",
    "sourcesContent": [
      "import React,{useState} from 'react';\nimport { StyleSheet, Button,ScrollView} from 'react-native';\nimport { TextInput } from 'react-native-paper';\n  import {Picker} from \"@react-native-community/picker\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { observer } from \"mobx-react-lite\"\nimport {useStore} from '../../components/provider'\n\n\n const InitInfoScreen = observer(({ navigation }) => {\n  navigation.setOptions({\n    headerTitle: \"Ваши характиристики\",\n    headerRight: () => (\n      <Button\n        onPress={() =>  navigation.navigate('StartPage')}\n        title=\"Далее\"\n        color=\"red\"\n      />\n    ),\n  })\n  const {specifications}  = useStore()\n  const [date, setDate] = useState(new Date(1598051730000));\n  const [mode, setMode] = useState('default');\n  const [value, setValue] = useState('')\n  const [listValue,setListValue] = useState([])\n  const ar = [\"отжимания\", \"подтягивания\"]\n  return (\n    <ScrollView style={styles.container}>\n    <TextInput\n      label=\"Имя\"\n      value={specifications.formSpecification.name}\n      onChangeText={text =>  specifications.handleChange('name',text)}\n    />\n     <DateTimePicker\n          testID=\"dateTimePicker\"\n          value={date}\n          mode={mode}\n          locale=\"ru-RU\"\n          is24Hour={true}\n          display=\"spinner\"\n  \n        />\n                       <Picker\n          selectedValue={value} \n          onValueChange={(itemValue)=>{\n              console.log(itemValue)\n            setValue(itemValue)\n            setListValue(...listValue,itemValue)\n          }}>          \n         {ar.map((tr)=> {return (<Picker.Item label={tr} value={tr} key={tr} />)})}\n       </Picker> \n      <Picker \n      selectedValue={specifications.formSpecification.height}\n      onValueChange={(itemValue)=>{\n        specifications.handleChange('height',itemValue)\n      }}>\n      <Picker.Item label=\"Выберите Рост\" value=\"\" />\n          {specifications.listHeight.map((h)=>{\n          return (\n            <Picker.Item label={`${h} см`} value={h} />\n          )\n        })}\n       </Picker>\n       <Picker\n          selectedValue={specifications.formSpecification.weight}\n            onValueChange={(itemValue)=>{\n              specifications.handleChange('weight',itemValue)\n            }}\n       >\n       <Picker.Item label=\"Выберите вес\" value=\"\" />\n          {specifications.listWeight.map((w)=><Picker.Item label={`${w} кг`} value={w} />)}\n       </Picker>\n    </ScrollView>\n    \n  );\n})\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n   \n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n  },\n  title:{\n    paddingBottom: 100\n  }\n});\n\nexport default InitInfoScreen"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
