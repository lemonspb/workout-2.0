{
  "ast": null,
  "code": "import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/mihailskopenko/Desktop/code/workout-2.0/src/screens/StartScreen/index.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Picker } from \"@react-native-community/picker\";\nexport default function StartScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n  navigation.setOptions({\n    headerTitle: \"Выбор упражнений\"\n  });\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      listValue = _useState4[0],\n      setListValue = _useState4[1];\n\n  var ar = [\"отжимания\", \"подтягивания\"];\n  return React.createElement(ScrollView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, React.createElement(Picker, {\n    selectedValue: value,\n    onValueChange: function onValueChange(itemValue) {\n      console.log(itemValue, listValue);\n      setValue(itemValue);\n      setListValue(function (prev) {\n        return [].concat(_toConsumableArray(prev), [itemValue]);\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, ar.map(function (tr) {\n    return React.createElement(Picker.Item, {\n      label: tr,\n      value: tr,\n      key: tr,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 34\n      }\n    });\n  })), React.createElement(FlatList, {\n    data: listValue,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Text, {\n        style: styles.item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 33\n        }\n      }, item);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 8\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  item: {\n    padding: 10,\n    fontSize: 18,\n    height: 44\n  },\n  title: {\n    paddingBottom: 100\n  }\n});",
  "map": {
    "version": 3,
    "sources": [
      "/Users/mihailskopenko/Desktop/code/workout-2.0/src/screens/StartScreen/index.js"
    ],
    "names": [
      "React",
      "useState",
      "Picker",
      "StartScreen",
      "navigation",
      "setOptions",
      "headerTitle",
      "value",
      "setValue",
      "listValue",
      "setListValue",
      "ar",
      "styles",
      "container",
      "itemValue",
      "console",
      "log",
      "prev",
      "map",
      "tr",
      "item",
      "StyleSheet",
      "create",
      "flex",
      "backgroundColor",
      "padding",
      "fontSize",
      "height",
      "title",
      "paddingBottom"
    ],
    "mappings": ";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;;;;AAEA,SAAQC,MAAR,QAAqB,gCAArB;AAEA,eAAe,SAASC,WAAT,OAAmC;AAAA;;AAAA,MAAbC,UAAa,QAAbA,UAAa;AAC9CA,EAAAA,UAAU,CAACC,UAAX,CAAsB;AAClBC,IAAAA,WAAW,EAAE;AADK,GAAtB;;AAGA,kBAA0BL,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOM,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAiCP,QAAQ,CAAC,EAAD,CAAzC;AAAA;AAAA,MAAOQ,SAAP;AAAA,MAAiBC,YAAjB;;AACA,MAAMC,EAAE,GAAG,CAAC,WAAD,EAAc,cAAd,CAAX;AAEF,SACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEC,MAAM,CAACC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACE,IAAA,aAAa,EAAEN,KADjB;AAEE,IAAA,aAAa,EAAE,uBAACO,SAAD,EAAa;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ,EAAsBL,SAAtB;AACFD,MAAAA,QAAQ,CAACM,SAAD,CAAR;AACAJ,MAAAA,YAAY,CAAC,UAACO,IAAD;AAAA,4CAAYA,IAAZ,IAAiBH,SAAjB;AAAA,OAAD,CAAZ;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOEH,EAAE,CAACO,GAAH,CAAO,UAACC,EAAD,EAAO;AAAC,WAAQ,oBAAC,MAAD,CAAQ,IAAR;AAAa,MAAA,KAAK,EAAEA,EAApB;AAAwB,MAAA,KAAK,EAAEA,EAA/B;AAAmC,MAAA,GAAG,EAAEA,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AAAwD,GAAvE,CAPF,CADJ,EAUG,oBAAC,QAAD;AACC,IAAA,IAAI,EAAEV,SADP;AAEC,IAAA,UAAU,EAAE;AAAA,UAAEW,IAAF,SAAEA,IAAF;AAAA,aAAY,oBAAC,IAAD;AAAO,QAAA,KAAK,EAAER,MAAM,CAACQ,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4BA,IAA5B,CAAZ;AAAA,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVH,CADF;AAiBD;AAED,IAAMR,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BT,EAAAA,SAAS,EAAE;AACTU,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE;AAFR,GADoB;AAM/BJ,EAAAA,IAAI,EAAE;AACJK,IAAAA,OAAO,EAAE,EADL;AAEJC,IAAAA,QAAQ,EAAE,EAFN;AAGJC,IAAAA,MAAM,EAAE;AAHJ,GANyB;AAW/BC,EAAAA,KAAK,EAAC;AACJC,IAAAA,aAAa,EAAE;AADX;AAXyB,CAAlB,CAAf",
    "sourcesContent": [
      "import React,{useState} from 'react';\nimport { StyleSheet, Text,View,FlatList} from 'react-native';\nimport {Picker} from \"@react-native-community/picker\";\n\nexport default function StartScreen({navigation}) {\n    navigation.setOptions({\n        headerTitle: \"Выбор упражнений\",\n      })\n    const [value, setValue] = useState('')\n    const [listValue,setListValue] = useState([])\n    const ar = [\"отжимания\", \"подтягивания\"]\n\n  return (\n    <ScrollView style={styles.container}>\n        <Picker\n          selectedValue={value} \n          onValueChange={(itemValue)=>{\n              console.log(itemValue,listValue)\n            setValue(itemValue)\n            setListValue((prev)=>[...prev,itemValue])\n          }}>          \n         {ar.map((tr)=> {return (<Picker.Item label={tr} value={tr} key={tr} />)})}\n       </Picker> \n       <FlatList\n        data={listValue}\n        renderItem={({item}) => <Text  style={styles.item}>{item}</Text>}\n        />\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n\n  },\n  item: {\n    padding: 10,\n    fontSize: 18,\n    height: 44,\n  },\n  title:{\n    paddingBottom: 100\n  }\n});\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
