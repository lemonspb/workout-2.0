{
  "ast": null,
  "code": "import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mihailskopenko/Desktop/code/workout-2.0/src/screens/StartScreen/index.js\";\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Picker } from \"@react-native-community/picker\";\nimport { observer } from \"mobx-react-lite\";\nimport { useStore } from \"../../components/provider\";\nvar StartScreen = observer(function (_ref) {\n  var navigation = _ref.navigation;\n  navigation.setOptions({\n    headerTitle: \"Выбор упражнений\"\n  });\n\n  var _useStore = useStore(),\n      workout = _useStore.workout;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      listValue = _useState4[0],\n      setListValue = _useState4[1];\n\n  return React.createElement(ScrollView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, React.createElement(Picker, {\n    selectedValue: value,\n    onValueChange: function onValueChange(itemValue) {\n      setValue(itemValue);\n      setListValue(function (prev) {\n        return [].concat(_toConsumableArray(prev), [itemValue]);\n      });\n      workout.onSelectWorkout();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, workout.listWorkout.map(function (item, index) {\n    return React.createElement(Picker.Item, {\n      label: item,\n      value: item,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 59\n      }\n    });\n  })), React.createElement(FlatList, {\n    data: workout.listSelectWorkout,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Text, {\n        style: styles.item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 33\n        }\n      }, item.name);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 8\n    }\n  }));\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  item: {\n    padding: 10,\n    fontSize: 18,\n    height: 44\n  },\n  title: {\n    paddingBottom: 100\n  }\n});\nexport default StartScreen;",
  "map": {
    "version": 3,
    "sources": [
      "/Users/mihailskopenko/Desktop/code/workout-2.0/src/screens/StartScreen/index.js"
    ],
    "names": [
      "React",
      "useState",
      "Picker",
      "observer",
      "useStore",
      "StartScreen",
      "navigation",
      "setOptions",
      "headerTitle",
      "workout",
      "value",
      "setValue",
      "listValue",
      "setListValue",
      "styles",
      "container",
      "itemValue",
      "prev",
      "onSelectWorkout",
      "listWorkout",
      "map",
      "item",
      "index",
      "listSelectWorkout",
      "name",
      "StyleSheet",
      "create",
      "flex",
      "backgroundColor",
      "padding",
      "fontSize",
      "height",
      "title",
      "paddingBottom"
    ],
    "mappings": ";;;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;;;;AAEA,SAAQC,MAAR,QAAqB,gCAArB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAAQC,QAAR;AAEA,IAAOC,WAAW,GAAIF,QAAQ,CAAC,gBAAkB;AAAA,MAAhBG,UAAgB,QAAhBA,UAAgB;AAC7CA,EAAAA,UAAU,CAACC,UAAX,CAAsB;AAClBC,IAAAA,WAAW,EAAE;AADK,GAAtB;;AAIA,kBAAmBJ,QAAQ,EAA3B;AAAA,MAAOK,OAAP,aAAOA,OAAP;;AAEA,kBAA0BR,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOS,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAiCV,QAAQ,CAAC,EAAD,CAAzC;AAAA;AAAA,MAAOW,SAAP;AAAA,MAAiBC,YAAjB;;AAGF,SACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEC,MAAM,CAACC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACE,IAAA,aAAa,EAAEL,KADjB;AAEE,IAAA,aAAa,EAAE,uBAACM,SAAD,EAAa;AAE1BL,MAAAA,QAAQ,CAACK,SAAD,CAAR;AACAH,MAAAA,YAAY,CAAC,UAACI,IAAD;AAAA,4CAAYA,IAAZ,IAAiBD,SAAjB;AAAA,OAAD,CAAZ;AACAP,MAAAA,OAAO,CAACS,eAAR;AACD,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQET,OAAO,CAACU,WAAR,CAAoBC,GAApB,CAAwB,UAACC,IAAD,EAAMC,KAAN,EAAe;AAAC,WAAQ,oBAAC,MAAD,CAAQ,IAAR;AAAa,MAAA,KAAK,EAAED,IAApB;AAA0B,MAAA,KAAK,EAAEA,IAAjC;AAAuC,MAAA,GAAG,EAAEC,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AAA+D,GAAvG,CARF,CADJ,EAWG,oBAAC,QAAD;AACC,IAAA,IAAI,EAAEb,OAAO,CAACc,iBADf;AAEC,IAAA,UAAU,EAAE;AAAA,UAAEF,IAAF,SAAEA,IAAF;AAAA,aAAY,oBAAC,IAAD;AAAO,QAAA,KAAK,EAAEP,MAAM,CAACO,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4BA,IAAI,CAACG,IAAjC,CAAZ;AAAA,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXH,CADF;AAkBD,CA7B6B,CAA9B;AA+BA,IAAMV,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC/BX,EAAAA,SAAS,EAAE;AACTY,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE;AAFR,GADoB;AAM/BP,EAAAA,IAAI,EAAE;AACJQ,IAAAA,OAAO,EAAE,EADL;AAEJC,IAAAA,QAAQ,EAAE,EAFN;AAGJC,IAAAA,MAAM,EAAE;AAHJ,GANyB;AAW/BC,EAAAA,KAAK,EAAC;AACJC,IAAAA,aAAa,EAAE;AADX;AAXyB,CAAlB,CAAf;AAgBA,eAAiB5B,WAAjB",
    "sourcesContent": [
      "import React,{useState} from 'react';\nimport { StyleSheet, Text,ScrollView,FlatList} from 'react-native';\nimport {Picker} from \"@react-native-community/picker\";\nimport { observer } from \"mobx-react-lite\"\nimport {useStore} from '../../components/provider'\n\nconst  StartScreen =  observer(({navigation}) => {\n    navigation.setOptions({\n        headerTitle: \"Выбор упражнений\",\n      })\n\n    const {workout}  = useStore()\n\n    const [value, setValue] = useState('')\n    const [listValue,setListValue] = useState([])\n \n\n  return (\n    <ScrollView style={styles.container}>\n        <Picker\n          selectedValue={value} \n          onValueChange={(itemValue)=>{\n            \n            setValue(itemValue)\n            setListValue((prev)=>[...prev,itemValue])\n            workout.onSelectWorkout()\n          }}>          \n         {workout.listWorkout.map((item,index)=> {return (<Picker.Item label={item} value={item} key={index} />)})}\n       </Picker> \n       <FlatList\n        data={workout.listSelectWorkout}\n        renderItem={({item}) => <Text  style={styles.item}>{item.name}</Text>}\n        />\n    </ScrollView>\n  );\n})\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n\n  },\n  item: {\n    padding: 10,\n    fontSize: 18,\n    height: 44,\n  },\n  title:{\n    paddingBottom: 100\n  }\n});\n\nexport default   StartScreen"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
